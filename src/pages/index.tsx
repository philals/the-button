import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { DefaultQueryCell } from "../utils/DefaultQueryCell";
import { trpc } from "../utils/trpc";

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

const Home: NextPage = () => {
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  const postsQuery = trpc.useQuery(["post.all"]);
  const lastClicked = trpc.useQuery(["button.lastClicked"]);
  console.log("ðŸš€ ~ file: index.tsx ~ line 17 ~ lastClicked", lastClicked);

  const onClickOfButton = trpc.useMutation(["button.clicked"]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center h-screen p-4">
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Last time this button was clicked by{" "}
          <span className="text-purple-300">{lastClicked.data?.name}</span>
        </h1>

        <div className="flex space-x-2 justify-center">
          <button
            onClick={() => onClickOfButton.mutate({ name: "phil2" })}
            type="button"
            className="inline-block px-6 py-2.5 bg-red-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-red-700 hover:shadow-lg focus:bg-red-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-red-800 active:shadow-lg transition duration-150 ease-in-out"
          >
            Button
          </button>
        </div>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
      </main>
      <DefaultQueryCell
        query={postsQuery}
        success={({ data }) => (
          <>
            {data.map((item) => (
              <article key={item.id}>
                <Link href={`/post/${item.id}`}>
                  <h3>{item.title}</h3>
                </Link>
                <p>{item.body}</p>
              </article>
            ))}
          </>
        )}
        empty={() => <p>WE NEED POSTS!!!</p>}
      />
    </>
  );
};

const TechnologyCard = ({
  name,
  description,
  documentation,
}: TechnologyCardProps) => {
  return (
    <section className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105">
      <h2 className="text-lg text-gray-700">{name}</h2>
      <p className="text-sm text-gray-600">{description}</p>
      <a
        className="mt-3 text-sm underline text-violet-500 decoration-dotted underline-offset-2"
        href={documentation}
        target="_blank"
        rel="noreferrer"
      >
        Documentation
      </a>
    </section>
  );
};

export default Home;
